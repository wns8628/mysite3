<project xmlns="http://maven.apache.org/POM/4.0.0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
   <modelVersion>4.0.0</modelVersion>
   <groupId>com.douzone</groupId>
   <artifactId>mysite3</artifactId>
   <version>0.0.1-SNAPSHOT</version>
   <packaging>war</packaging>

   <properties> <!-- 사용할 버전 설정 -->
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding> <!-- java가 utf-8이라는걸 알려줌 -->
      <project.reporting.outputEncdoing>UTF-8</project.reporting.outputEncdoing>
      <jcloverslf4j.version>1.7.6</jcloverslf4j.version> <!-- jcl로 보내는 로그들을 slf4j로 넘겨서 받음(브릿지라이브러리?) -->
      <logback.version>1.1.1</logback.version>
      <org.springframework-version>4.2.1.RELEASE</org.springframework-version>
   </properties>

   <!-- 라이브러리 설정(Dependency 설정) -->
   <dependencies>

      <!-- sprint core -->
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-context</artifactId>
         <version>${org.springframework-version}</version>
		<!-- 
         JCL 제외 스프링 라이브러리가 에러날수있음 제외시키면 커몬로깅으로 인식하면안되고 제외안시키면 커먼 로깅을 2개로 인식 한곳에서만 제외시켜주면됨
         <exclusions>
            <exclusion>
               <groupId>commons-logging</groupId>
               <artifactId>commons-logging</artifactId>
            </exclusion>
         </exclusions>   
          -->
      </dependency>

      <!-- spring aspect -->
	  <dependency>
    	<groupId>org.springframework</groupId>
    	<artifactId>spring-aspects</artifactId>
    	<version>${org.springframework-version}</version>
	  </dependency>
      
      <!-- spring web -->
      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-web</artifactId>
         <version>${org.springframework-version}</version>
      </dependency>

      <dependency>
         <groupId>org.springframework</groupId>
         <artifactId>spring-webmvc</artifactId>
         <version>${org.springframework-version}</version>
      </dependency>

      <!-- spring jdbc -->
         <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${org.springframework-version}</version>
         </dependency>
      
      <!-- jstl -->

      <dependency>

         <groupId>javax.servlet</groupId>

         <artifactId>jstl</artifactId>

         <version>1.2</version>

      </dependency>

 
    <!--   common dbcp -->
      <dependency>
         <groupId>commons-dbcp</groupId>
         <artifactId>commons-dbcp</artifactId>
         <version>1.4</version>
      </dependency>


 
      <!-- MySQL Connector JDBC Driver -->
      <dependency>
         <groupId>mysql</groupId>
         <artifactId>mysql-connector-java</artifactId>
         <version>5.1.38</version>
      </dependency>
      
 
     <!-- mybatis -->
     <dependency> 
         <groupId>org.mybatis</groupId> 
         <artifactId>mybatis</artifactId> 
         <version>3.2.2</version> 
      </dependency>

      <dependency> 
         <groupId>org.mybatis</groupId> 
         <artifactId>mybatis-spring</artifactId> 
         <version>1.2.0</version> 
      </dependency>

      
	<!-- 
      Logback 얘를 커몬 로깅으로 인식해야함
      <dependency>
         <groupId>org.slf4j</groupId>
         <artifactId>jcl-over-slf4j</artifactId>
         <version>${jcloverslf4j.version}</version>
      </dependency>

      <dependency>
         <groupId>ch.qos.logback</groupId>
         <artifactId>logback-classic</artifactId>
         <version>${logback.version}</version>
      </dependency> 
      -->
		<!-- jackson -->
		<dependency>
		    <groupId>com.fasterxml.jackson.core</groupId>
		    <artifactId>jackson-databind</artifactId>
		    <version>2.1.1</version>
		</dependency>


		<!-- common fileupload -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2.1</version>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.4</version>
		</dependency>
		
		<!-- validation -->
		<dependency>
		   <groupId>javax.validation</groupId>
		   <artifactId>validation-api</artifactId>
		   <version>1.0.0.GA</version>
		</dependency>
		<dependency>
		   <groupId>org.hibernate</groupId>
		   <artifactId>hibernate-validator</artifactId>
		   <version>4.2.0.Final</version>
		</dependency>
		
   </dependencies>

<profiles>
		<profile>
			<id>production</id>
			<build>
				<resources>
					<resource>
						<directory>${project.basedir}/src/main/resources</directory>
						<excludes>
							<exclude>**/*.java</exclude>
						</excludes>
					</resource>
				</resources>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
						<configuration>
							<encoding>UTF-8</encoding>
						</configuration>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<!-- Servlet -->
				<dependency>
					<groupId>javax.servlet</groupId>
					<artifactId>javax.servlet-api</artifactId>
					<version>3.0.1</version>
					<scope>provided</scope>
				</dependency>
				<dependency>
					<groupId>javax.servlet.jsp</groupId>
					<artifactId>jsp-api</artifactId>
					<version>2.0</version>
					<scope>provided</scope>
				</dependency>
			</dependencies>
		</profile>
	</profiles>
	
   <build>
      <plugins>
         <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>3.8.0</version>
            <configuration>
               <source>1.8</source>
               <target>1.8</target>
            </configuration>
         </plugin>
         <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <version>3.2.1</version>
            <configuration>
               <warSourceDirectory>webapp</warSourceDirectory>
            </configuration>
         </plugin>         
         <plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>tomcat-maven-plugin</artifactId>
				<configuration>
					<url>http://127.0.0.1:8080/manager/text</url>
					<path>/mysite3</path>
					<username>admin</username>
					<password>manager</password>
				</configuration>
			</plugin>
      </plugins>
   </build>
</project>